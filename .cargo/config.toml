# see https://os.phil-opp.com/zh-CN/freestanding-rust-binary/#tong-yi-bian-yi-ming-ling
#[target.'cfg(target_os = "linux")']
#rustflags = ["-C", "link-arg=-nostartfiles"]
#
#[target.'cfg(target_os = "windows")']
#rustflags = ["-C", "link-args=/ENTRY:_start /SUBSYSTEM:console"]
#
#[target.'cfg(target_os = "macos")']
#rustflags = ["-C", "link-args=-e __start -static -nostartfiles"]

# see https://github.com/phil-opp/blog_os/tree/post-02/.cargo
[target.'cfg(target_os = "none")']
runner = "bootimage runner"

## 使用 `cargo build` 编译时需要的配置
#[profile.dev]
#panic = "abort" # 禁用panic时栈展开
#
## 使用 `cargo build --release` 编译时需要的配置
#[profile.release]
#panic = "abort" # 禁用 panic 时栈展开

[unstable]
build-std-features = ["compiler-builtins-mem"]
build-std = ["core", "compiler_builtins"]

[build]
target = "x86_64-rust_os.json"